# Generated by Django 5.0.2 on 2024-03-05 15:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='About_us',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('user_fullname', models.CharField(max_length=255)),
                ('img', models.ImageField(upload_to='house_img/', validators=[django.core.validators.RegexValidator(code='invalid_image_filename', message='File name must have a valid image extension (jpg, jpeg, png, gif).', regex='^[a-zA-Z0-9_-]+\\.(jpg|jpeg|png|gif)$')])),
                ('description', models.CharField(max_length=255)),
                ('date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('img_logo', models.ImageField(upload_to='partnership_logo/', validators=[django.core.validators.RegexValidator(code='invalid_image_filename', message='File name must have a valid image extension (jpg, jpeg, png, gif).', regex='^[a-zA-Z0-9_-]+\\.(jpg|jpeg|png|gif)$')])),
                ('banner_img', models.ImageField(upload_to='banner_photo/', validators=[django.core.validators.RegexValidator(code='invalid_image_filename', message='File name must have a valid image extension (jpg, jpeg, png, gif).', regex='^[a-zA-Z0-9_-]+\\.(jpg|jpeg|png|gif)$')])),
                ('craeted', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_email', message='Enter a valid email address.', regex='^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$')])),
                ('craeted', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Detail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('quantity', models.IntegerField()),
                ('craeted', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('my_logo', models.ImageField(upload_to='my_logo/', validators=[django.core.validators.RegexValidator(code='invalid_image_filename', message='File name must have a valid image extension (jpg, jpeg, png, gif).', regex='^[a-zA-Z0-9_-]+\\.(jpg|jpeg|png|gif)$')])),
                ('description', models.CharField(max_length=255)),
                ('facebook', models.CharField(max_length=255)),
                ('twitter', models.CharField(max_length=255)),
                ('instagram', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_number', message='Invalid phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')])),
                ('email', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(code='invalid_email', message='Enter a valid email address.', regex='^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$')])),
                ('craeted', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Presintaiton',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img', models.FileField(upload_to='photo_vidoe/', validators=[django.core.validators.RegexValidator(code='invalid_file_extension', message='File name must have a valid image or video extension (jpg, jpeg, png, gif, mp4, mov, avi).', regex='^[a-zA-Z0-9_-]+\\.(jpg|jpeg|png|gif|mp4|mov|avi)$')])),
                ('craeted', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Recomendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('img', models.ImageField(upload_to='Recomendation_photo/')),
                ('name', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('user_name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('user_img', models.ImageField(upload_to='user_photo/', validators=[django.core.validators.RegexValidator(code='invalid_image_filename', message='File name must have a valid image extension (jpg, jpeg, png, gif).', regex='^[a-zA-Z0-9_-]+\\.(jpg|jpeg|png|gif)$')])),
                ('tag', models.CharField(choices=[('popular', 'popular'), ('new house', 'new house'), ('best deals', 'best deals')], max_length=25)),
                ('type', models.CharField(choices=[('house', 'house'), ('villa', 'villa'), ('apartment', 'apartment')], max_length=25)),
                ('craeted', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('img', models.ImageField(upload_to='testimonail_img/', validators=[django.core.validators.RegexValidator(code='invalid_image_filename', message='File name must have a valid image extension (jpg, jpeg, png, gif).', regex='^[a-zA-Z0-9_-]+\\.(jpg|jpeg|png|gif)$')])),
                ('user_title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('user_img', models.ImageField(upload_to='user_img/', validators=[django.core.validators.RegexValidator(code='invalid_image_filename', message='File name must have a valid image extension (jpg, jpeg, png, gif).', regex='^[a-zA-Z0-9_-]+\\.(jpg|jpeg|png|gif)$')])),
                ('user_job', models.CharField(max_length=255)),
                ('user_name', models.CharField(max_length=255)),
                ('reting', models.FloatField()),
                ('craeted', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Sell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('user_img', models.ImageField(upload_to='user_photo/', validators=[django.core.validators.RegexValidator(code='invalid_image_filename', message='File name must have a valid image extension (jpg, jpeg, png, gif).', regex='^[a-zA-Z0-9_-]+\\.(jpg|jpeg|png|gif)$')])),
                ('user_name', models.CharField(max_length=255)),
                ('user_job', models.CharField(max_length=255)),
                ('craeted', models.DateTimeField(auto_now=True)),
                ('detail', models.ManyToManyField(to='main.detail')),
                ('presintation', models.ManyToManyField(to='main.presintaiton')),
            ],
        ),
    ]
